name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RUST_BACKTRACE: 1

jobs:
  style-check:
    name: Check Rust style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.85.0
          components: rustfmt
      - run: cargo fmt -- --check

  stable-test:
    name: Run most tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "macos-15", "ubuntu-24.04-arm", "ubuntu-latest" ]
        # Test on MSRV and stable.
        toolchain: [ "1.85.0", "stable" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: >
          cargo +${{ matrix.toolchain }} test
          --release
          --verbose
          --workspace
          --exclude compile-errors
          --no-fail-fast

  freebsd-test:
    name: Test on FreeBSD
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [ "1.85.0", "stable", "nightly-2025-01-01" ]
    steps:
      - uses: actions/checkout@v4
      - name: Test on FreeBSD
        uses: cross-platform-actions/action@v0.27.0
        with:
          operating_system: freebsd
          version: '14.1'
          shell: bash
          run: |
            export IGNORE_OSVERSION=yes
            sudo -E pkg update
            sudo -E pkg install -y curl
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source $HOME/.cargo/env

            # Enable DTrace kernel module and allow regular users to register probes
            sudo kldload dtraceall
            sudo chmod 666 /dev/dtrace/helper

            cargo +${{ matrix.toolchain }} test \
              --release \
              --verbose \
              --workspace \
              --no-fail-fast \
              --exclude compile-errors

  trybuild-test:
    name: Run trybuild tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "macos-15", "ubuntu-24.04-arm", "ubuntu-latest" ]
        # Test on the pinned rust-toolchain version.
        toolchain: [ "1.85.0" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: >
          cargo +${{ matrix.toolchain }} test
          --release
          --verbose
          --package compile-errors
          --no-fail-fast

  stable-test-no-support:
    name: Test on DTrace-less systems
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "windows-latest" ]
        # Test on MSRV and stable.
        toolchain: [ "1.85.0", "stable" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: >
          cargo +${{ matrix.toolchain }} test
          --release
          --verbose
          --workspace
          --exclude compile-errors
          --exclude does-it-work
          --exclude test-json
          --exclude test-unique-id
          --no-fail-fast

  stable-test-no-op:
    name: Test with probes disabled
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "macos-15" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - run: >
          cargo +stable test
          --release
          --verbose
          --no-default-features
          --workspace
          --exclude does-it-work
          --exclude test-json
          --exclude test-unique-id
          --exclude compile-errors
          --no-fail-fast

  recent-nightly:
    name: Run tests on a recent nightly
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "macos-15", "ubuntu-24.04-arm", "ubuntu-latest" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-01-01
      - run: >
          cargo +nightly-2025-01-01 test
          --release
          --verbose
          --workspace
          --exclude compile-errors
          --exclude dusty
          --no-fail-fast

  recent-nightly-no-support:
    name: Run tests on a recent nightly
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "windows-latest" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-01-01
      - run: >
          cargo +nightly-2025-01-01 test
          --release
          --verbose
          --workspace
          --exclude compile-errors
          --exclude does-it-work
          --exclude test-json
          --exclude test-unique-id
          --exclude dusty
          --no-fail-fast
